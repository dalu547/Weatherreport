plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.dalu.weatherreport"
        minSdk 23
        targetSdk 33
        versionCode 2
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    viewBinding {
        enabled = true
    }

    buildTypes.each {
        it.buildConfigField 'String', 'SERVER_URL', serverUrl
        it.buildConfigField 'String', 'WEATHER_API_KEY', WEATHER_API_KEY
    }
}


dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    testImplementation "org.mockito:mockito-core:3.4.6"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.mockito:mockito-inline:3.3.3'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // Dagger
    def dagger_version = "2.38.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def logging_version = "4.3.1"
    implementation "com.squareup.okhttp3:okhttp:$logging_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"


    //Glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"


    // RxJava2
    def rxjava_version = "2.1.8"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    def rxandroid_version = "2.0.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    def retrofit_adapter = "1.0.0"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$retrofit_adapter"
}