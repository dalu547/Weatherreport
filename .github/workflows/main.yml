# This is a basic workflow to help you get started with Actions

name: Prepare build and upload to firebase

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-firebase:
    name: Upload build to firebase

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Gradle
        run: ./gradlew build

      - name: Build Release AAB
        id: buildRelease
        run: ./gradlew bundleRelease

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
#          path: app/build/outputs/apk/debug/app-debug.apk
          path: app/build/outputs/bundle/debug/app-debug.aab

#      - name: Download  a Build Artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: app
#          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload build artifact to firebase app distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: AndroidDev
          releaseNotes: "CI/CD Testing"
#          file: app/build/outputs/apk/debug/app-debug.apk
          file: app/build/outputs/bundle/debug/app-debug.aab


  deploy-play-store:
    name: Upload build to playstore
    needs: [deploy-firebase]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Generate Release APK
        run: ./gradlew assembleRelease

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - uses: actions/upload-artifact@master
        with:
          name: release.apk
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - uses: actions/upload-artifact@master
        with:
          name: mapping.txt
          path: app/build/outputs/mapping/release/mapping.txt

      - uses: actions/download-artifact@master
        with:
          name: release.apk
      - uses: actions/download-artifact@master
        with:
          name: mapping.txt

      - name: Publish to Play Store internal test track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.raywenderlich.android.rwquotes
          releaseFile: app-release-unsigned-signed.apk
          track: internal
          userFraction: 0.50
          mappingFile: mapping.txt

